<?xml version="1.0"?>
<doc>
    <assembly>
        <name>NAnt.NUnit1Tasks</name>
    </assembly>
    <members>
        <member name="M:NAnt.NUnit1.Types.IResultFormatter.StartTestSuite(NAnt.NUnit1.Types.NUnitTestData)">
            <summary>
            The whole test suite started.
            </summary>
        </member>
        <member name="M:NAnt.NUnit1.Types.IResultFormatter.EndTestSuite(NAnt.NUnit1.Types.TestResultExtra)">
            <summary>
            The whole test suite ended.
            </summary>
        </member>
        <member name="M:NAnt.NUnit1.Types.IResultFormatter.SetOutput(System.IO.TextWriter)">
            <summary>
            Sets the <see cref="T:System.IO.TextWriter"/> the formatter is supposed to write 
            its results to.
            </summary>
        </member>
        <member name="T:NAnt.NUnit1.Types.IResultFormatterCollection">
            <summary>
            Contains a strongly typed collection of <see cref="T:NAnt.NUnit1.Types.IResultFormatter"/> objects.
            </summary>
        </member>
        <member name="M:NAnt.NUnit1.Types.IResultFormatterCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NAnt.NUnit1.Types.IResultFormatterCollection"/> class.
            </summary>
        </member>
        <member name="M:NAnt.NUnit1.Types.IResultFormatterCollection.#ctor(NAnt.NUnit1.Types.IResultFormatterCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:NAnt.NUnit1.Types.IResultFormatterCollection"/> class
            with the specified <see cref="T:NAnt.NUnit1.Types.IResultFormatterCollection"/> instance.
            </summary>
        </member>
        <member name="M:NAnt.NUnit1.Types.IResultFormatterCollection.#ctor(NAnt.NUnit1.Types.IResultFormatter[])">
            <summary>
            Initializes a new instance of the <see cref="T:NAnt.NUnit1.Types.IResultFormatterCollection"/> class
            with the specified array of <see cref="T:NAnt.NUnit1.Types.IResultFormatter"/> instances.
            </summary>
        </member>
        <member name="M:NAnt.NUnit1.Types.IResultFormatterCollection.Add(NAnt.NUnit1.Types.IResultFormatter)">
            <summary>
            Adds a <see cref="T:NAnt.NUnit1.Types.IResultFormatter"/> to the end of the collection.
            </summary>
            <param name="item">The <see cref="T:NAnt.NUnit1.Types.IResultFormatter"/> to be added to the end of the collection.</param> 
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:NAnt.NUnit1.Types.IResultFormatterCollection.AddRange(NAnt.NUnit1.Types.IResultFormatter[])">
            <summary>
            Adds the elements of a <see cref="T:NAnt.NUnit1.Types.IResultFormatter"/> array to the end of the collection.
            </summary>
            <param name="items">The array of <see cref="T:NAnt.NUnit1.Types.IResultFormatter"/> elements to be added to the end of the collection.</param> 
        </member>
        <member name="M:NAnt.NUnit1.Types.IResultFormatterCollection.AddRange(NAnt.NUnit1.Types.IResultFormatterCollection)">
            <summary>
            Adds the elements of a <see cref="T:NAnt.NUnit1.Types.IResultFormatterCollection"/> to the end of the collection.
            </summary>
            <param name="items">The <see cref="T:NAnt.NUnit1.Types.IResultFormatterCollection"/> to be added to the end of the collection.</param> 
        </member>
        <member name="M:NAnt.NUnit1.Types.IResultFormatterCollection.Contains(NAnt.NUnit1.Types.IResultFormatter)">
            <summary>
            Determines whether a <see cref="T:NAnt.NUnit1.Types.IResultFormatter"/> is in the collection.
            </summary>
            <param name="item">The <see cref="T:NAnt.NUnit1.Types.IResultFormatter"/> to locate in the collection.</param> 
            <returns>
            <see langword="true"/> if <paramref name="item"/> is found in the 
            collection; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:NAnt.NUnit1.Types.IResultFormatterCollection.CopyTo(NAnt.NUnit1.Types.IResultFormatter[],System.Int32)">
            <summary>
            Copies the entire collection to a compatible one-dimensional array, starting at the specified index of the target array.        
            </summary>
            <param name="array">The one-dimensional array that is the destination of the elements copied from the collection. The array must have zero-based indexing.</param> 
            <param name="index">The zero-based index in <paramref name="array"/> at which copying begins.</param>
        </member>
        <member name="M:NAnt.NUnit1.Types.IResultFormatterCollection.IndexOf(NAnt.NUnit1.Types.IResultFormatter)">
            <summary>
            Retrieves the index of a specified <see cref="T:NAnt.NUnit1.Types.IResultFormatter"/> object in the collection.
            </summary>
            <param name="item">The <see cref="T:NAnt.NUnit1.Types.IResultFormatter"/> object for which the index is returned.</param> 
            <returns>
            The index of the specified <see cref="T:NAnt.NUnit1.Types.IResultFormatter"/>. If the <see cref="T:NAnt.NUnit1.Types.IResultFormatter"/> is not currently a member of the collection, it returns -1.
            </returns>
        </member>
        <member name="M:NAnt.NUnit1.Types.IResultFormatterCollection.Insert(System.Int32,NAnt.NUnit1.Types.IResultFormatter)">
            <summary>
            Inserts a <see cref="T:NAnt.NUnit1.Types.IResultFormatter"/> into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The <see cref="T:NAnt.NUnit1.Types.IResultFormatter"/> to insert.</param>
        </member>
        <member name="M:NAnt.NUnit1.Types.IResultFormatterCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the collection.
            </summary>
            <returns>
            A <see cref="T:NAnt.NUnit1.Types.IResultFormatterEnumerator"/> for the entire collection.
            </returns>
        </member>
        <member name="M:NAnt.NUnit1.Types.IResultFormatterCollection.Remove(NAnt.NUnit1.Types.IResultFormatter)">
            <summary>
            Removes a member from the collection.
            </summary>
            <param name="item">The <see cref="T:NAnt.NUnit1.Types.IResultFormatter"/> to remove from the collection.</param>
        </member>
        <member name="P:NAnt.NUnit1.Types.IResultFormatterCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
        </member>
        <member name="T:NAnt.NUnit1.Types.IResultFormatterEnumerator">
            <summary>
            Enumerates the <see cref="T:NAnt.NUnit1.Types.IResultFormatter"/> elements of a <see cref="T:NAnt.NUnit1.Types.IResultFormatterCollection"/>.
            </summary>
        </member>
        <member name="M:NAnt.NUnit1.Types.IResultFormatterEnumerator.#ctor(NAnt.NUnit1.Types.IResultFormatterCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:NAnt.NUnit1.Types.IResultFormatterEnumerator"/> class
            with the specified <see cref="T:NAnt.NUnit1.Types.IResultFormatterCollection"/>.
            </summary>
            <param name="arguments">The collection that should be enumerated.</param>
        </member>
        <member name="M:NAnt.NUnit1.Types.IResultFormatterEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            <see langword="true" /> if the enumerator was successfully advanced 
            to the next element; <see langword="false" /> if the enumerator has 
            passed the end of the collection.
            </returns>
        </member>
        <member name="M:NAnt.NUnit1.Types.IResultFormatterEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the 
            first element in the collection.
            </summary>
        </member>
        <member name="P:NAnt.NUnit1.Types.IResultFormatterEnumerator.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
            <returns>
            The current element in the collection.
            </returns>
        </member>
        <member name="T:NAnt.NUnit1.Types.LogFormatter">
            <summary>
            Prints information about running tests directly to the build log.
            </summary>
        </member>
        <member name="M:NAnt.NUnit1.Types.LogFormatter.SetOutput(System.IO.TextWriter)">
            <summary>Not used, all output goes to Log class.</summary>
        </member>
        <member name="M:NAnt.NUnit1.Types.LogFormatter.StartTestSuite(NAnt.NUnit1.Types.NUnitTestData)">
            <summary>Called when the whole test suite has started.</summary>
        </member>
        <member name="M:NAnt.NUnit1.Types.LogFormatter.EndTestSuite(NAnt.NUnit1.Types.TestResultExtra)">
            <summary>Called when the whole test suite has ended.</summary>
        </member>
        <member name="M:NAnt.NUnit1.Types.LogFormatter.FormatError(System.String,System.String)">
            <summary>Convert a stack trace line into something that can be clicked on in an IDE output window.</summary>
            <param name="trace">The StackTrace string, see <see cref="P:System.Exception.StackTrace"/>.</param>
            <param name="message">The string that gets appended to the end of file(line): portion.</param>
        </member>
        <member name="T:NAnt.NUnit1.Tasks.NUnitTask">
            <summary>
            Runs tests using the NUnit V1.0 framework.
            </summary>
            <remarks>
              <para>
              See the <see href="http://nunit.sf.net">NUnit home page</see> for more 
              information.
              </para>
              <para>
              The <see cref="P:NAnt.NUnit1.Tasks.NUnitTask.HaltOnFailure"/> or <see cref="P:NAnt.NUnit1.Tasks.NUnitTask.HaltOnError"/> 
              attributes are only used to stop more than one test suite to stop 
              running.  If any test suite fails a build error will be thrown.  
              Set <see cref="P:NAnt.Core.Task.FailOnError"/> to <see langword="false"/> to 
              ignore test errors and continue build.
              </para>
            </remarks>
            <example>
              <para>
              Run tests in the <c>MyProject.Tests.dll</c> assembly.
              </para>
              <para>
              The test results are logged in <c>results.xml</c> and <c>results.txt</c> 
              using the <see cref="F:NAnt.NUnit.Types.FormatterType.Xml"/> and <see cref="F:NAnt.NUnit.Types.FormatterType.Plain"/> 
              formatters, respectively.
              </para>
              <code>
                <![CDATA[
            <nunit basedir="build" verbose="false" haltonerror="true" haltonfailure="true">
                <formatter type="Xml" />
                <formatter type="Plain" />
                <test name="MyProject.Tests.AllTests" assembly="MyProject.Tests.dll" outfile="results"/>
            </nunit>
                ]]>
              </code>
            </example>
        </member>
        <member name="P:NAnt.NUnit1.Tasks.NUnitTask.HaltOnError">
            <summary>
            Stops running tests when a test causes an error. The default is 
            <see langword="false" />.
            </summary>
            <remarks>
            Implies haltonfailure.
            </remarks>
        </member>
        <member name="P:NAnt.NUnit1.Tasks.NUnitTask.HaltOnFailure">
            <summary>
            Stops running tests if a test fails (errors are considered failures 
            as well). The default is <see langword="false" />.
            </summary>
        </member>
        <member name="P:NAnt.NUnit1.Tasks.NUnitTask.Timeout">
            <summary>
            Cancel the individual tests if they do not finish in the specified 
            time (measured in milliseconds). Ignored if fork is disabled.
            </summary>
        </member>
        <member name="P:NAnt.NUnit1.Tasks.NUnitTask.Tests">
            <summary>
            Tests to run.
            </summary>
        </member>
        <member name="P:NAnt.NUnit1.Tasks.NUnitTask.FormatterElements">
            <summary>
            Formatters to output results of unit tests.
            </summary>
        </member>
        <member name="T:NAnt.NUnit1.Types.NUnitTest">
            <summary>
            Represents a test element of an <see cref="T:NAnt.NUnit1.Tasks.NUnitTask"/>.
            </summary>
        </member>
        <member name="P:NAnt.NUnit1.Types.NUnitTest.OutFile">
            <summary>
            Base name of the test result. The full filename is determined by this 
            attribute and the extension of formatter.
            </summary>
        </member>
        <member name="P:NAnt.NUnit1.Types.NUnitTest.ToDir">
            <summary>
            Directory to write the reports to.
            </summary>
        </member>
        <member name="P:NAnt.NUnit1.Types.NUnitTest.Class">
            <summary>
            Class name of the test.
            </summary>
        </member>
        <member name="P:NAnt.NUnit1.Types.NUnitTest.Assembly">
            <summary>
            Assembly to load the test from.
            </summary>
        </member>
        <member name="P:NAnt.NUnit1.Types.NUnitTest.Fork">
            <summary>
            Run the tests in a separate <see cref="T:System.AppDomain"/>.
            </summary>
        </member>
        <member name="P:NAnt.NUnit1.Types.NUnitTest.HaltOnError">
            <summary>
            Stop the build process if an error occurs during the test run.
            </summary>
        </member>
        <member name="P:NAnt.NUnit1.Types.NUnitTest.HaltOnFailure">
            <summary>
            Stop the build process if a test fails (errors are considered failures 
            as well).
            </summary>
        </member>
        <member name="P:NAnt.NUnit1.Types.NUnitTest.AppConfigFile">
            <summary>
            The application configuration file to use for the NUnit test domain.
            </summary>
        </member>
        <member name="T:NAnt.NUnit1.Types.NUnitTestCollection">
            <summary>
            Contains a strongly typed collection of <see cref="T:NAnt.NUnit1.Types.NUnitTest"/> objects.
            </summary>
        </member>
        <member name="M:NAnt.NUnit1.Types.NUnitTestCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NAnt.NUnit1.Types.NUnitTestCollection"/> class.
            </summary>
        </member>
        <member name="M:NAnt.NUnit1.Types.NUnitTestCollection.#ctor(NAnt.NUnit1.Types.NUnitTestCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:NAnt.NUnit1.Types.NUnitTestCollection"/> class
            with the specified <see cref="T:NAnt.NUnit1.Types.NUnitTestCollection"/> instance.
            </summary>
        </member>
        <member name="M:NAnt.NUnit1.Types.NUnitTestCollection.#ctor(NAnt.NUnit1.Types.NUnitTest[])">
            <summary>
            Initializes a new instance of the <see cref="T:NAnt.NUnit1.Types.NUnitTestCollection"/> class
            with the specified array of <see cref="T:NAnt.NUnit1.Types.NUnitTest"/> instances.
            </summary>
        </member>
        <member name="M:NAnt.NUnit1.Types.NUnitTestCollection.Add(NAnt.NUnit1.Types.NUnitTest)">
            <summary>
            Adds a <see cref="T:NAnt.NUnit1.Types.NUnitTest"/> to the end of the collection.
            </summary>
            <param name="item">The <see cref="T:NAnt.NUnit1.Types.NUnitTest"/> to be added to the end of the collection.</param> 
            <returns>The position into which the new element was inserted.</returns>
        </member>
        <member name="M:NAnt.NUnit1.Types.NUnitTestCollection.AddRange(NAnt.NUnit1.Types.NUnitTest[])">
            <summary>
            Adds the elements of a <see cref="T:NAnt.NUnit1.Types.NUnitTest"/> array to the end of the collection.
            </summary>
            <param name="items">The array of <see cref="T:NAnt.NUnit1.Types.NUnitTest"/> elements to be added to the end of the collection.</param> 
        </member>
        <member name="M:NAnt.NUnit1.Types.NUnitTestCollection.AddRange(NAnt.NUnit1.Types.NUnitTestCollection)">
            <summary>
            Adds the elements of a <see cref="T:NAnt.NUnit1.Types.NUnitTestCollection"/> to the end of the collection.
            </summary>
            <param name="items">The <see cref="T:NAnt.NUnit1.Types.NUnitTestCollection"/> to be added to the end of the collection.</param> 
        </member>
        <member name="M:NAnt.NUnit1.Types.NUnitTestCollection.Contains(NAnt.NUnit1.Types.NUnitTest)">
            <summary>
            Determines whether a <see cref="T:NAnt.NUnit1.Types.NUnitTest"/> is in the collection.
            </summary>
            <param name="item">The <see cref="T:NAnt.NUnit1.Types.NUnitTest"/> to locate in the collection.</param> 
            <returns>
            <see langword="true"/> if <paramref name="item"/> is found in the 
            collection; otherwise, <see langword="false"/>.
            </returns>
        </member>
        <member name="M:NAnt.NUnit1.Types.NUnitTestCollection.CopyTo(NAnt.NUnit1.Types.NUnitTest[],System.Int32)">
            <summary>
            Copies the entire collection to a compatible one-dimensional array, starting at the specified index of the target array.        
            </summary>
            <param name="array">The one-dimensional array that is the destination of the elements copied from the collection. The array must have zero-based indexing.</param> 
            <param name="index">The zero-based index in <paramref name="array"/> at which copying begins.</param>
        </member>
        <member name="M:NAnt.NUnit1.Types.NUnitTestCollection.IndexOf(NAnt.NUnit1.Types.NUnitTest)">
            <summary>
            Retrieves the index of a specified <see cref="T:NAnt.NUnit1.Types.NUnitTest"/> object in the collection.
            </summary>
            <param name="item">The <see cref="T:NAnt.NUnit1.Types.NUnitTest"/> object for which the index is returned.</param> 
            <returns>
            The index of the specified <see cref="T:NAnt.NUnit1.Types.NUnitTest"/>. If the <see cref="T:NAnt.NUnit1.Types.NUnitTest"/> is not currently a member of the collection, it returns -1.
            </returns>
        </member>
        <member name="M:NAnt.NUnit1.Types.NUnitTestCollection.Insert(System.Int32,NAnt.NUnit1.Types.NUnitTest)">
            <summary>
            Inserts a <see cref="T:NAnt.NUnit1.Types.NUnitTest"/> into the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param>
            <param name="item">The <see cref="T:NAnt.NUnit1.Types.NUnitTest"/> to insert.</param>
        </member>
        <member name="M:NAnt.NUnit1.Types.NUnitTestCollection.GetEnumerator">
            <summary>
            Returns an enumerator that can iterate through the collection.
            </summary>
            <returns>
            A <see cref="T:NAnt.NUnit1.Types.NUnitTestEnumerator"/> for the entire collection.
            </returns>
        </member>
        <member name="M:NAnt.NUnit1.Types.NUnitTestCollection.Remove(NAnt.NUnit1.Types.NUnitTest)">
            <summary>
            Removes a member from the collection.
            </summary>
            <param name="item">The <see cref="T:NAnt.NUnit1.Types.NUnitTest"/> to remove from the collection.</param>
        </member>
        <member name="P:NAnt.NUnit1.Types.NUnitTestCollection.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The zero-based index of the element to get or set.</param>
        </member>
        <member name="T:NAnt.NUnit1.Types.NUnitTestEnumerator">
            <summary>
            Enumerates the <see cref="T:NAnt.NUnit1.Types.NUnitTest"/> elements of a <see cref="T:NAnt.NUnit1.Types.NUnitTestCollection"/>.
            </summary>
        </member>
        <member name="M:NAnt.NUnit1.Types.NUnitTestEnumerator.#ctor(NAnt.NUnit1.Types.NUnitTestCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:NAnt.NUnit1.Types.NUnitTestEnumerator"/> class
            with the specified <see cref="T:NAnt.NUnit1.Types.NUnitTestCollection"/>.
            </summary>
            <param name="arguments">The collection that should be enumerated.</param>
        </member>
        <member name="M:NAnt.NUnit1.Types.NUnitTestEnumerator.MoveNext">
            <summary>
            Advances the enumerator to the next element of the collection.
            </summary>
            <returns>
            <see langword="true" /> if the enumerator was successfully advanced 
            to the next element; <see langword="false" /> if the enumerator has 
            passed the end of the collection.
            </returns>
        </member>
        <member name="M:NAnt.NUnit1.Types.NUnitTestEnumerator.Reset">
            <summary>
            Sets the enumerator to its initial position, which is before the 
            first element in the collection.
            </summary>
        </member>
        <member name="P:NAnt.NUnit1.Types.NUnitTestEnumerator.Current">
            <summary>
            Gets the current element in the collection.
            </summary>
            <returns>
            The current element in the collection.
            </returns>
        </member>
        <member name="T:NAnt.NUnit1.Types.NUnitTestData">
            <summary>
            Carries data specified through the test element.
            </summary>
        </member>
        <member name="M:NAnt.NUnit1.Tasks.NUnitTestRunner.NeedsRunning">
            <summary>
            Determines if the unit test needs running.
            </summary>
            <returns>
            <see langword="true" /> if unit test needs running, otherwise,
            <see langword="false" />.
            </returns>
            <remarks>
              <para>
              Determines if the test needs running by looking at the date stamp 
              of the test assembly and the test results log.
              </para>
            </remarks>
        </member>
        <member name="M:NAnt.NUnit1.Tasks.NUnitTestRunner.Run(System.String,System.Boolean)">
            <summary>
            Runs a Suite extracted from a TestCase subclass.
            </summary>
        </member>
        <member name="M:NAnt.NUnit1.Tasks.NUnitTestRunner.CreateFormatters(NAnt.NUnit1.Types.NUnitTestData,System.String,System.Boolean)">
            <summary>
            Creates the formatters to be used when running this test.
            </summary>
        </member>
        <member name="M:NAnt.NUnit1.Tasks.NUnitTestRunner.GetOutput(NAnt.NUnit.Types.FormatterData,NAnt.NUnit1.Types.NUnitTestData)">
            <summary>
            Returns the output file or null if does not use a file.
            </summary>
        </member>
        <member name="M:NAnt.NUnit1.Tasks.NUnitTestRunner.GetSuite(System.String)">
            <summary>
            Returns the test suite from a given class.
            </summary>
            <remarks>
            The assemblyQualifiedName parameter needs to be in form:
            "full.qualified.class.name,Assembly"
            </remarks>
        </member>
        <member name="P:NAnt.NUnit1.Tasks.NUnitTestRunner.Formatters">
            <summary>
            Gets the collection of registered formatters.
            </summary>
            <value>Collection of registered formatters.</value>
        </member>
        <member name="P:NAnt.NUnit1.Tasks.NUnitTestRunner.ResultCode">
            <summary>
            Gets the result of the test.
            </summary>
            <value>The result of the test.</value>
        </member>
        <member name="T:NAnt.NUnit1.Types.PlainTextFormatter">
            <summary>
            Prints information about running tests in plain text.
            </summary>
        </member>
        <member name="M:NAnt.NUnit1.Types.PlainTextFormatter.SetOutput(System.IO.TextWriter)">
            <summary>Sets the Writer the formatter is supposed to write its results to.</summary>
        </member>
        <member name="M:NAnt.NUnit1.Types.PlainTextFormatter.StartTestSuite(NAnt.NUnit1.Types.NUnitTestData)">
            <summary>Called when the whole test suite has started.</summary>
        </member>
        <member name="M:NAnt.NUnit1.Types.PlainTextFormatter.EndTestSuite(NAnt.NUnit1.Types.TestResultExtra)">
            <summary>Called when the whole test suite has ended.</summary>
        </member>
        <member name="M:NAnt.NUnit1.Types.PlainTextFormatter.FormatError(System.String,System.String)">
            <summary>Convert a stack trace line into something that can be clicked on in an IDE output window.</summary>
            <param name="trace">The StackTrace string, see <see cref="P:System.Exception.StackTrace"/>.</param>
            <param name="message">The string that gets appended to the end of file(line): portion.</param>
        </member>
        <member name="T:NAnt.NUnit1.Types.TestResultExtra">
             <summary>
             Decorates NUnits <see cref="T:NUnit.Framework.TestResult"/> with extra information such as 
             run-time.
            </summary>
        </member>
        <member name="M:NAnt.NUnit1.Types.TestResultExtra.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NAnt.NUnit1.Types.TestResultExtra"/>
            class.
            </summary>
        </member>
        <member name="P:NAnt.NUnit1.Types.TestResultExtra.RunTime">
            <summary>
            Gets or sets the total run-time of a test.
            </summary>
            <value>The total run-time of a test.</value>
        </member>
        <member name="T:NAnt.NUnit1.Types.XmlResultFormatter">
            <summary>
            Prints detailed information about running tests in XML format.
            </summary>
        </member>
        <member name="M:NAnt.NUnit1.Types.XmlResultFormatter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:NAnt.NUnit1.Types.XmlResultFormatter"/>
            class.
            </summary>
        </member>
        <member name="M:NAnt.NUnit1.Types.XmlResultFormatter.SetOutput(System.IO.TextWriter)">
            <summary>
            Sets the <see cref="T:System.IO.TextWriter"/> the formatter is supposed to 
            write its results to.
            </summary>
        </member>
        <member name="M:NAnt.NUnit1.Types.XmlResultFormatter.StartTestSuite(NAnt.NUnit1.Types.NUnitTestData)">
            <summary>
            Called when the whole test suite has started.
            </summary>
        </member>
        <member name="M:NAnt.NUnit1.Types.XmlResultFormatter.EndTestSuite(NAnt.NUnit1.Types.TestResultExtra)">
            <summary>
            Called when the whole test suite has ended.
            </summary>
        </member>
    </members>
</doc>
